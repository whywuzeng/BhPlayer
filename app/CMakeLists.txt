# For more information about using CMake with Android Studio, read the
# documentation: https://d.android.com/studio/projects/add-native-code.html

# Sets the minimum version of CMake required to build the native library.

cmake_minimum_required(VERSION 3.4.1)

#设置so的文件夹路径
set(distribution_DIR ${CMAKE_SOURCE_DIR}/src/main/jniLibs/armeabi)
#设置include路径
set(distribution_INCLUDE ${CMAKE_SOURCE_DIR}/src/main/cpp)
message(STATUS "wuzeng"+${distribution_DIR})
# Creates and names a library, sets it as either STATIC
# or SHARED, and provides the relative paths to its source code.
# You can define multiple libraries, and CMake builds them for you.
# Gradle automatically packages shared libraries with your APK.

#引入动态库
add_library(avcodec-56 SHARED IMPORTED)
set_target_properties(avcodec-56 PROPERTIES IMPORTED_LOCATION
    ${distribution_DIR}/libavcodec-56.so)

add_library(avdevice-56 SHARED IMPORTED)
set_target_properties(avdevice-56 PROPERTIES IMPORTED_LOCATION
    ${distribution_DIR}/libavdevice-56.so)

add_library(avfilter-5 SHARED IMPORTED)
set_target_properties(avfilter-5 PROPERTIES IMPORTED_LOCATION
    ${distribution_DIR}/libavfilter-5.so)

add_library(avformat-56 SHARED IMPORTED)
set_target_properties(avformat-56 PROPERTIES IMPORTED_LOCATION
    ${distribution_DIR}/libavformat-56.so)

add_library(avutil-54 SHARED IMPORTED)
set_target_properties(avutil-54 PROPERTIES IMPORTED_LOCATION
    ${distribution_DIR}/libavutil-54.so)

add_library(postproc-53 SHARED IMPORTED)
set_target_properties(postproc-53 PROPERTIES IMPORTED_LOCATION
    ${distribution_DIR}/libpostproc-53.so)

add_library(swresample-1 SHARED IMPORTED)
set_target_properties(swresample-1 PROPERTIES IMPORTED_LOCATION
    ${distribution_DIR}/libswresample-1.so)

add_library(swscale-3 SHARED IMPORTED)
set_target_properties(swscale-3 PROPERTIES IMPORTED_LOCATION
    ${distribution_DIR}/libswscale-3.so)

#C++11
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")

add_library( # Sets the name of the library.
             native-lib

             # Sets the library as a shared library.
             SHARED

             # Provides a relative path to your source file(s).
             src/main/cpp/native-lib.cpp
             src/main/cpp/ffmpegRender.c
             src/main/cpp/FFmpegDecodeAudio.c
             src/main/cpp/queue.c
             src/main/cpp/FFPlay.c
             )

# Searches for a specified prebuilt library and stores the path as a
# variable. Because CMake includes system libraries in the search path by
# default, you only need to specify the name of the public NDK library
# you want to add. CMake verifies that the library exists before
# completing its build.

#加入头文件
target_include_directories(native-lib PRIVATE
                           ${distribution_INCLUDE}/include
                           )


find_library( # Sets the name of the path variable.
              log-lib

              # Specifies the name of the NDK library that
              # you want CMake to locate.
              log )

find_library( # Sets the name of the path variable.
              landroid

              # Specifies the name of the NDK library that
              # you want CMake to locate.
              android )

# Specifies libraries CMake should link to your target library. You
# can link multiple libraries, such as libraries you define in this
# build script, prebuilt third-party libraries, or system libraries.

target_link_libraries( # Specifies the target library.
                       native-lib
                       avcodec-56
                        avdevice-56
                        avfilter-5
                        avformat-56
                        avutil-54
                        postproc-53
                        swresample-1
                        swscale-3
                       # Links the target library to the log library
                       # included in the NDK.
                       ${log-lib}
                       ${landroid}
                       )